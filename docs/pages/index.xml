<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pages on Coding Tips</title>
    <link>https://synapticvoid.github.io/codingtips/pages/</link>
    <description>Recent content in Pages on Coding Tips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-fr</language>
    <lastBuildDate>Tue, 02 Nov 2021 13:50:24 +0100</lastBuildDate><atom:link href="https://synapticvoid.github.io/codingtips/pages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Algorithmes - Intro</title>
      <link>https://synapticvoid.github.io/codingtips/pages/algorithm-intro/</link>
      <pubDate>Tue, 02 Nov 2021 13:50:24 +0100</pubDate>
      
      <guid>https://synapticvoid.github.io/codingtips/pages/algorithm-intro/</guid>
      <description>Algorithmes - Intro üéØ Objectif üéØ Prendre du level sur l&amp;rsquo;algorithmie :
 Analyser un sujet Ecrire un algorithme qui r√©sout le probl√®me Recommencer ! Chaque algo est une pompe mentale üòÑ  Quelques explications suppl√©mentaires :
 Vous pouvez r√©aliser les exercices propos√©s dans le langage de votre choix (Java / Python / C# / Autre). Les algos vont souvent interagir avec l&amp;rsquo;OS, √©vitez donc le JavaScript pour faire ces exercices Par souci de lisibilit√©, les exemples de code seront donn√©s en Python Si une biblioth√®que est n√©cessaire pour r√©aliser un exercice, elle sera pr√©cis√©e dans la description Les exercices sont class√©s par difficult√© croissante Utilisez git pour stocker tous les exercices dans un repo (un dossier = un exercice)  üìö Ressources üìö Je vous recommande ce livre d&amp;rsquo;introduction √† l&amp;rsquo;algorithmie Grokking Algorithms - Aditya Y Bhargava qui vous donnera tous les fondamentaux (complexit√©, recherches dichotomique, hashmap, etc).</description>
    </item>
    
    <item>
      <title>Android Kotlin Pomodoro</title>
      <link>https://synapticvoid.github.io/codingtips/pages/android-kotlin-pomodoro/</link>
      <pubDate>Sat, 27 Mar 2021 15:50:24 +0100</pubDate>
      
      <guid>https://synapticvoid.github.io/codingtips/pages/android-kotlin-pomodoro/</guid>
      <description>Android Pomodoro Objectif Cr√©er une application de Pomodoro afin d&amp;rsquo;organiser son temps de travail :
 D√©marrer un timer d&amp;rsquo;une dur√©e par d√©faut de 25 mins Voir un historiques des pomodoros effectu√©s  Pour rendre l&amp;rsquo;application ludique, chaque pomodoro sera symbolis√© par un organisme qui doit grandir (arbre, plante, animal / autre) :
 Si le pomodoro est interrompu, l&amp;rsquo;organisme meurt Si le pomodoro est termin√©, l&amp;rsquo;organisme survi et est ajout√© dans un jardin / parc  Pendant le pomodoro, l&amp;rsquo;organisme grandit.</description>
    </item>
    
    <item>
      <title>Python Js Blockchain Kraken</title>
      <link>https://synapticvoid.github.io/codingtips/pages/python-js-blockchain-kraken/</link>
      <pubDate>Wed, 27 Jan 2021 19:26:48 +0100</pubDate>
      
      <guid>https://synapticvoid.github.io/codingtips/pages/python-js-blockchain-kraken/</guid>
      <description>BlockStock Objectif Cr√©er un site miroir de Kraken afin de g√©rer sa cryptomonnaie :
 Voir le cours de la monnaie sur une dur√©e Acheter / Vendre Programmer des alertes (ex : monnaie &amp;lt; seuil)  Stack Technique Backend  Langage Python Framework Django BDD MySQL  Frontend  VueJS  Progression 1. R√©cup√©rer les donn√©es de Kraken Cr√©er une route Django permettant d&amp;rsquo;afficher quelques donn√©es obtenues depuis l&amp;rsquo;API de Kraken.</description>
    </item>
    
    <item>
      <title>Python Opencv Object Tracker</title>
      <link>https://synapticvoid.github.io/codingtips/pages/python-opencv-object-tracker/</link>
      <pubDate>Fri, 18 Dec 2020 19:33:41 +0100</pubDate>
      
      <guid>https://synapticvoid.github.io/codingtips/pages/python-opencv-object-tracker/</guid>
      <description>TMIYC (Track Me If You Can) Objectif √ätre capable de suivre un objet dans une vid√©o. L&amp;rsquo;objet doit √™tre identifi√© (par un rectangle) et un rectangle doit √™tre affich√© pendant la lecture de la vid√©o pour indiqu√© que la vid√©o est suivi.
Stack technique  Imagerie avec OpenCV Interface graphique avec Kivy. ‚ö†Ô∏èKivy est compatible avec Python 3.7 maximum (ils n&amp;rsquo;ont pas encore migr√©) ‚Äã  Kivy peut √™tre mis de c√¥t√© dans un 1er temps, il est utile qu&amp;rsquo;apr√®s avoir impl√©ment√© et fiabilis√© l&amp;rsquo;algorithme de recherche.</description>
    </item>
    
    <item>
      <title>Javascript</title>
      <link>https://synapticvoid.github.io/codingtips/pages/javascript/</link>
      <pubDate>Tue, 10 Nov 2020 16:10:38 +0100</pubDate>
      
      <guid>https://synapticvoid.github.io/codingtips/pages/javascript/</guid>
      <description>JavaScript intro Robin Penea | v1.1.0
Organisation Pour faire ces exos, je vous recommande :
 1 repo GitHub en publique qui contient tout Dans ce repo, un dossier par exercice  Exercice #01 - Horloge Votre objectif est d&amp;rsquo;afficher une horloge qui affiche le temps courant au format suivant : HH:MM:ss. Par exemple : 23:45:12 (23h45 et 12 secondes). Cette horloge doit faire avancer les secondes de mani√®re autonomes.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://synapticvoid.github.io/codingtips/pages/python-morpion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://synapticvoid.github.io/codingtips/pages/python-morpion/</guid>
      <description>Morpion Description L&amp;rsquo;objectif est de d√©velopper un morpion en Python o√π 2 joueurs vont jouer au tour par tour.
Le programme doit :
 Afficher une grille de jeu Demander au joueur 1 de choisir une case pour jouer Le jeu affiche la grille de jeu avec la case remplie Demander au joueur 2 de choisir une case pour jouer  Cette boucle se r√©p√®te jusqu&amp;rsquo;a ce que :
 Un des joueurs r√©ussi un alignement de 3 La grille est remplie sans que personne gagne  En fin de partie, le r√©sultat du jeu est affich√©.</description>
    </item>
    
  </channel>
</rss>
